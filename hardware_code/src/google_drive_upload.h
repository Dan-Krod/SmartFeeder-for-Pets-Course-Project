#ifndef GOOGLE_DRIVE_UPLOAD_H
#define GOOGLE_DRIVE_UPLOAD_H

#include <WiFiClientSecure.h>
#include <FirebaseESP32.h>
#include "esp_camera.h"
#include "Base64.h"
#include "image_processing.h"

// üîó External variables
extern FirebaseData firebaseData;
extern String myScript, myFoldername, myFilename, myImage;
extern uint8_t* _jpg_buf;
extern size_t _jpg_buf_len;

inline void uploadPhotoToGoogleDrive() {
  const char* myDomain = "----------------";
  String getAll = "", getBody = "";

  camera_fb_t* fb = nullptr;
  for (int retry = 0; retry < 5 && !fb; retry++) {
    fb = esp_camera_fb_get();
    if (!fb) {
      Serial.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–∞–¥—Ä—É! –°–ø—Ä–æ–±—É—é —â–µ —Ä–∞–∑...");
      delay(500);
    }
  }
  if (!fb) {
    Serial.println("‚ùå –ö–∞–º–µ—Ä–∞ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ ESP32.");
    return;
  }

  if (fb->format != PIXFORMAT_JPEG) {
    Serial.println("‚ùå –§–æ—Ä–º–∞—Ç –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ JPEG. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è...");
    bool ok = frame2jpg(fb, 80, &_jpg_buf, &_jpg_buf_len);
    esp_camera_fb_return(fb);
    fb = nullptr;
    if (!ok) {
      Serial.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –≤ JPEG!");
      return;
    }
  }

  Serial.println("‚úÖ –§–æ—Ç–æ –æ—Ç—Ä–∏–º–∞–Ω–æ! –ü–µ—Ä–µ–¥–∞—é —É Google Drive...");

  WiFiClientSecure client;
  client.setInsecure();

  if (client.connect(myDomain, 443)) {
    Serial.println("‚úÖ –ó'—î–¥–Ω–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!");

    String imageFile = "data:image/jpeg;base64,";
    char output[base64_enc_len(3)];
    for (int i = 0; i < fb->len; i += 3) {
      int len = (i + 3 <= fb->len) ? 3 : fb->len - i;
      base64_encode(output, (char*)(fb->buf + i), len);
      imageFile += urlencode(String(output));
    }

    String Data = myFoldername + myFilename + myImage;
    client.println("POST " + myScript + " HTTP/1.1");
    client.println("Host: " + String(myDomain));
    client.println("Content-Length: " + String(Data.length() + imageFile.length()));
    client.println("Content-Type: application/x-www-form-urlencoded");
    client.println("Connection: keep-alive");
    client.println();

    client.print(Data);
    for (int i = 0; i < imageFile.length(); i += 1000) {
      client.print(imageFile.substring(i, i + 1000));
    }

    esp_camera_fb_return(fb);

    long startTime = millis();
    const int waitTime = 10000;
    bool state = false;

    while ((millis() - startTime) < waitTime) {
      delay(100);
      while (client.available()) {
        char c = client.read();
        if (state) getBody += String(c);
        if (c == '\n') state = true;
      }
      if (getBody.length() > 0) break;
    }

    Serial.println("üì¨ –í—ñ–¥–ø–æ–≤—ñ–¥—å: " + getBody);
    client.stop();
  } else {
    Serial.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Google Apps Script");
  }
}

#endif